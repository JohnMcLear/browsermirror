--- originalmirror//lib/mirror.js	2012-03-27 23:15:56.210186290 +0100
+++ newmirror//lib/mirror.js	2012-03-27 23:39:29.899181699 +0100
@@ -1,17 +1,25 @@
 /************************************************************
  * Channel: connection to the server
  */
+
 function Channel(server, channel, receiver) {
   if (this === window) {
     throw 'You forgot new';
   }
   server = parseUrl(server);
   this.receiver = receiver;
-
+  var transports = ['websocket', 'flashsocket', 'htmlfile', 'xhr-multipart',
+                    'xhr-polling', 'jsonp-polling'];
+  if (io.Socket.prototype.isXDomain()) {
+    // This does not seem to work cross-domain:
+    transports.splice(transports.indexOf('flashsocket'), 1);
+  }
   // FIXME: can't get any other transport working (reliably) cross-domain
-  var transports = ['xhr-polling'];
-
-  this.socket = io.connect(server.hostname+":"+server.port, {
+  transports = ['xhr-polling'];
+  if (transports.indexOf('flashsocket') != -1) {
+    WebSocket.__initialize();
+  }
+  this.socket = new io.Socket(server.hostname, {
     rememberTransport: false,
     connectTimeout: 5000,
     reconnect: true,
@@ -21,7 +29,7 @@
   });
   this.socket.on('connect', this.receiver.reconnect.bind(this.receiver));
   this.socket.on('reconnect', this.receiver.reconnect.bind(this.receiver));
-  // this.socket.connect();
+  this.socket.connect();
   this.channel = channel;
   var message = {subscribe: channel, hello: true, isMaster: this.receiver.isMaster}  ;
   // FIXME: this is kind of a break in the abstraction:
